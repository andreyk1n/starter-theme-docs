// –Ü–º–ø–æ—Ä—Ç—É—î–º–æ –Ω–µ–æ–±—Ö—ñ–¥–Ω—ñ –ø–∞–∫–µ—Ç–∏
const gulp = require('gulp'); // –û—Å–Ω–æ–≤–Ω–∏–π Gulp
const fileInclude = require('gulp-file-include'); // –î–æ–∑–≤–æ–ª—è—î –≤—Å—Ç–∞–≤–ª—è—Ç–∏ —á–∞—Å—Ç–∏–Ω–∏ HTML –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é @@include
const sass = require('gulp-sass')(require('sass')); // –ö–æ–º–ø—ñ–ª—è—Ç–æ—Ä SCSS —É CSS
const cleanCSS = require('gulp-clean-css'); // –ú—ñ–Ω—ñ—Ñ—ñ–∫–∞—Ü—ñ—è CSS
const rename = require('gulp-rename'); // –ü–µ—Ä–µ–π–º–µ–Ω—É–≤–∞–Ω–Ω—è —Ñ–∞–π–ª—ñ–≤
const browserSync = require('browser-sync').create(); // –ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–µ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –±—Ä–∞—É–∑–µ—Ä–∞ –ø—Ä–∏ –∑–º—ñ–Ω–∞—Ö
const uglify = require('gulp-uglify'); // –ú—ñ–Ω—ñ—Ñ—ñ–∫–∞—Ü—ñ—è JavaScript
const plumber = require('gulp-plumber'); // –ó–∞–ø–æ–±—ñ–≥–∞—î –∑—É–ø–∏–Ω—Ü—ñ Gulp –ø—Ä–∏ –ø–æ–º–∏–ª–∫–∞—Ö
const fs = require('fs'); // –†–æ–±–æ—Ç–∞ –∑ —Ñ–∞–π–ª–æ–≤–æ—é —Å–∏—Å—Ç–µ–º–æ—é (–≤–±—É–¥–æ–≤–∞–Ω–∏–π –º–æ–¥—É–ª—å Node.js)
const path = require('path'); // –†–æ–±–æ—Ç–∞ –∑ —à–ª—è—Ö–∞–º–∏ (–≤–±—É–¥–æ–≤–∞–Ω–∏–π –º–æ–¥—É–ª—å Node.js)
const through2 = require('through2'); // –û–±—Ä–æ–±–∫–∞ –ø–æ—Ç–æ–∫—ñ–≤ (–¥–ª—è sitemap)
const copy = require('gulp-copy'); // –î–ª—è –∫–æ–ø—ñ—é–≤–∞–Ω–Ω—è —Ñ–∞–π–ª—ñ–≤

// –û—á–∏—â–µ–Ω–Ω—è –¥–∏—Ä–µ–∫—Ç–æ—Ä—ñ—ó dist –ø–µ—Ä–µ–¥ –∑–±—ñ—Ä–∫–æ—é
// del ‚Äî ES-–º–æ–¥—É–ª—å, —Ç–æ–º—É —ñ–º–ø–æ—Ä—Ç—É—î–º–æ –¥–∏–Ω–∞–º—ñ—á–Ω–æ
async function clean() {
  const del = (await import('del')).deleteAsync;
  return del('dist'); // –í–∏–¥–∞–ª—è—î–º–æ –ø–∞–ø–∫—É dist
}

// –®–ª—è—Ö–∏ –¥–æ –≤—Ö—ñ–¥–Ω–∏—Ö/–≤–∏—Ö—ñ–¥–Ω–∏—Ö —Ñ–∞–π–ª—ñ–≤
const paths = {
  html: {
    src: 'src/html/pages/*.html', // HTML-—Å—Ç–æ—Ä—ñ–Ω–∫–∏
    watch: 'src/html/**/*.html',  // –í—Å—ñ HTML-—Ñ–∞–π–ª–∏ –¥–ª—è –≤—ñ–¥—Å–ª—ñ–¥–∫–æ–≤—É–≤–∞–Ω–Ω—è –∑–º—ñ–Ω
    dest: 'dist/' // –ö—É–¥–∏ –∑–±–µ—Ä—ñ–≥–∞—Ç–∏ HTML
  },
  styles: {
    src: 'src/scss/**/*.scss', // –í—Å—ñ SCSS-—Ñ–∞–π–ª–∏
    dest: 'dist/css/' // –ö—É–¥–∏ –∑–±–µ—Ä—ñ–≥–∞—Ç–∏ –∑–∫–æ–º–ø—ñ–ª—å–æ–≤–∞–Ω—ñ CSS
  },
  scripts: {
    app: 'src/js/app.js', // –û—Å–Ω–æ–≤–Ω–∏–π JS-—Ñ–∞–π–ª
    appDest: 'dist/js/', // –ö—É–¥–∏ –∫–æ–ø—ñ—é–≤–∞—Ç–∏ app.js
    functions: 'src/js/functions/**/*.js', // –£—Å—ñ –¥—Ä—ñ–±–Ω—ñ JS-—Ñ—É–Ω–∫—Ü—ñ—ó
    functionsDest: 'dist/js/functions/' // –ö—É–¥–∏ –∫–æ–ø—ñ—é–≤–∞—Ç–∏ –º—ñ–Ω—ñ–º—ñ–∑–æ–≤–∞–Ω—ñ —Ñ—É–Ω–∫—Ü—ñ—ó
  },
  images: {
    src: 'src/images/**/*.*', // –í—Å—ñ –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è
    dest: 'dist/images/' // –ö—É–¥–∏ –∫–æ–ø—ñ—é–≤–∞—Ç–∏ –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è
  }
};

// –û–±—Ä–æ–±–∫–∞ –∫–∞—Å—Ç–æ–º–Ω–∏—Ö –¥–∏—Ä–µ–∫—Ç–∏–≤ @@img("...") —Ç–∞ @@bgimg("...") –≤ HTML-—Ñ–∞–π–ª–∞—Ö
function replaceAliases() {
  return through2.obj(function (file, _, cb) {
    if (file.isBuffer()) {
      let content = file.contents.toString();

      // –ó–∞–º—ñ–Ω–∞ @img/filename.jpg ‚Üí images/filename.jpg
      content = content.replace(/@img\//g, './images/');

      // –ó–∞–º—ñ–Ω–∞ @bgimg/filename.jpg ‚Üí background-image: url('images/filename.jpg');
      content = content.replace(/@bgimg\/([^)'" ]+)/g, "background-image: url('./images/$1')");

      file.contents = Buffer.from(content);
    }
    cb(null, file);
  });
}

// –û–±—Ä–æ–±–∫–∞ HTML-—Ñ–∞–π–ª—ñ–≤ —ñ–∑ –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è–º include'—ñ–≤
function html() {
  console.log('\x1b[36m%s\x1b[0m', 'üìÑ HTML –æ–±—Ä–æ–±–ª—è—î—Ç—å—Å—è...');
  return gulp.src(paths.html.src)
    .pipe(fileInclude({ prefix: '@@', basepath: 'src/html/' })) // –ü–æ—à—É–∫ @@include
    .pipe(replaceAliases()) // –ó–∞–º—ñ–Ω–∞ @img/ —Ç–∞ @bgimg/
    .pipe(gulp.dest(paths.html.dest)) // –ó–∞–ø–∏—Å —É dist/
    .pipe(browserSync.stream()); // –û–Ω–æ–≤–ª–µ–Ω–Ω—è —Å—Ç–æ—Ä—ñ–Ω–∫–∏
}

// –ì–µ–Ω–µ—Ä–∞—Ü—ñ—è sitemap.html –Ω–∞ –æ—Å–Ω–æ–≤—ñ –≤—Å—ñ—Ö HTML-—Å—Ç–æ—Ä—ñ–Ω–æ–∫
function sitemap(cb) {
  const links = [];

  // –ó–Ω–∞—Ö–æ–¥–∏–º–æ –≤—Å—ñ HTML-—Ñ–∞–π–ª–∏ –≤ dist
  gulp.src('dist/**/*.html', { read: false })
    .pipe(through2.obj(function (file, _, callback) {
      const relativePath = path.relative('dist', file.path).replace(/\\/g, '/');
      if (relativePath !== 'sitemap.html') {
        links.push(`<li><a href="${relativePath}">${relativePath}</a></li>`);
      }
      callback();
    }, function (callback) {
      // –§–æ—Ä–º—É—î–º–æ HTML –¥–ª—è sitemap
      const html = `<!DOCTYPE html>
<html lang="uk">
<head>
  <meta charset="UTF-8">
  <title>–ö–∞—Ä—Ç–∞ —Å–∞–π—Ç—É</title>
  <style>
    body { font-family: sans-serif; padding: 2rem; background: #f9f9f9; }
    ul { line-height: 1.8; }
    a { color: #007acc; text-decoration: none; }
    a:hover { text-decoration: underline; }
  </style>
</head>
<body>
  <h1>–ö–∞—Ä—Ç–∞ —Å–∞–π—Ç—É</h1>
  <ul>${links.join('\n')}</ul>
</body>
</html>`.trim();

      fs.writeFileSync('dist/sitemap.html', html); // –°—Ç–≤–æ—Ä—é—î–º–æ sitemap
      console.log('\x1b[36m%s\x1b[0m', 'üó∫Ô∏è  sitemap.html –æ–Ω–æ–≤–ª–µ–Ω–æ!');
      callback();
      cb(); // –ó–∞–≤–µ—Ä—à—É—î–º–æ —Ç–∞—Å–∫
    }));
}

// –ö–æ–º–ø—ñ–ª—è—Ü—ñ—è SCSS ‚Üí CSS, –º—ñ–Ω—ñ—Ñ—ñ–∫–∞—Ü—ñ—è —ñ –ø–µ—Ä–µ–π–º–µ–Ω—É–≤–∞–Ω–Ω—è
function styles() {
  console.log('\x1b[35m%s\x1b[0m', 'üé® SCSS –∫–æ–º–ø—ñ–ª—é—î—Ç—å—Å—è...');
  return gulp.src(paths.styles.src)
    .pipe(sass().on('error', sass.logError)) // –ö–æ–º–ø—ñ–ª—è—Ü—ñ—è SCSS
    .pipe(cleanCSS()) // –ú—ñ–Ω—ñ—Ñ—ñ–∫–∞—Ü—ñ—è
    .pipe(rename({ suffix: '.min' })) // –î–æ–¥–∞—î–º–æ .min –¥–æ –Ω–∞–∑–≤–∏
    .pipe(gulp.dest(paths.styles.dest)) // –ó–∞–ø–∏—Å —É dist/css
    .pipe(browserSync.stream()); // –û–Ω–æ–≤–ª–µ–Ω–Ω—è —Å—Ç–æ—Ä—ñ–Ω–∫–∏
}

// –ö–æ–ø—ñ—é–≤–∞–Ω–Ω—è app.js –±–µ–∑ –º—ñ–Ω—ñ–º—ñ–∑–∞—Ü—ñ—ó
function jsApp() {
  console.log('\x1b[33m%s\x1b[0m', 'üß© jsApp –∫–æ–ø—ñ—é—î—Ç—å—Å—è –±–µ–∑ –º—ñ–Ω—ñ–º—ñ–∑–∞—Ü—ñ—ó...');
  return gulp.src(paths.scripts.app)
    .pipe(gulp.dest(paths.scripts.appDest))
    .pipe(browserSync.stream());
}

// –ú—ñ–Ω—ñ—Ñ—ñ–∫–∞—Ü—ñ—è —Ñ—É–Ω–∫—Ü—ñ–æ–Ω–∞–ª—å–Ω–∏—Ö JS-—Ñ–∞–π–ª—ñ–≤
function jsFunctions() {
  console.log('\x1b[32m%s\x1b[0m', '‚öôÔ∏è jsFunctions –º—ñ–Ω—ñ–º—ñ–∑—É—î—Ç—å—Å—è...');
  return gulp.src(paths.scripts.functions)
    .pipe(plumber()) // –ó–∞–ø–æ–±—ñ–≥–∞–Ω–Ω—è –∑—É–ø–∏–Ω—Ü—ñ –ø—Ä–∏ –ø–æ–º–∏–ª–∫–∞—Ö
    .pipe(uglify()) // –ú—ñ–Ω—ñ—Ñ—ñ–∫–∞—Ü—ñ—è
    .pipe(gulp.dest(paths.scripts.functionsDest))
    .pipe(browserSync.stream());
}

// –ö–æ–ø—ñ—é–≤–∞–Ω–Ω—è –∑–æ–±—Ä–∞–∂–µ–Ω—å —É dist
function images() {
  console.log('\x1b[34m%s\x1b[0m', 'üñºÔ∏è –ó–æ–±—Ä–∞–∂–µ–Ω–Ω—è –∫–æ–ø—ñ—é—é—Ç—å—Å—è...');
  return gulp.src(paths.images.src)
    .pipe(copy(paths.images.dest, { prefix: 2 })) // –ö–æ–ø—ñ—é—î–º–æ –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è –¥–æ dist/images
    .pipe(browserSync.stream())
    .on('end', () => console.log('–ó–æ–±—Ä–∞–∂–µ–Ω–Ω—è —É—Å–ø—ñ—à–Ω–æ —Å–∫–æ–ø—ñ–π–æ–≤–∞–Ω–æ!'));
}

// –í—ñ–¥—Å–ª—ñ–¥–∫–æ–≤—É–≤–∞–Ω–Ω—è –∑–º—ñ–Ω —ñ live-reload —É –±—Ä–∞—É–∑–µ—Ä—ñ
function watch() {
  browserSync.init({
    server: {
      baseDir: './dist' // –ó–∞–ø—É—Å–∫–∞—î–º–æ –ª–æ–∫–∞–ª—å–Ω–∏–π —Å–µ—Ä–≤–µ—Ä –∑ –ø–∞–ø–∫–∏ dist
    }
  });

  // –°–ø–æ—Å—Ç–µ—Ä–µ–∂–µ–Ω–Ω—è –∑–∞ –≤—Å—ñ–º–∞ —Ñ–∞–π–ª–∞–º–∏
  gulp.watch(paths.html.watch, gulp.series(html, sitemap)); // HTML + sitemap
  gulp.watch(paths.styles.src, styles); // SCSS
  gulp.watch(paths.scripts.app, jsApp); // JS app
  gulp.watch(paths.scripts.functions, jsFunctions); // JS —Ñ—É–Ω–∫—Ü—ñ—ó
  gulp.watch(paths.images.src, images); // –ó–æ–±—Ä–∞–∂–µ–Ω–Ω—è

  console.log('\x1b[44m%s\x1b[0m', 'üëÄ Gulp —Å–ª—ñ–¥–∫—É—î –∑–∞ —Ñ–∞–π–ª–∞–º–∏...');
}

// –û—Å–Ω–æ–≤–Ω–µ –∑–∞–≤–¥–∞–Ω–Ω—è –∑–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º: –æ—á–∏—â–µ–Ω–Ω—è ‚Üí –ø–∞—Ä–∞–ª–µ–ª—å–Ω–∞ –æ–±—Ä–æ–±–∫–∞ ‚Üí sitemap ‚Üí —Å–ø–æ—Å—Ç–µ—Ä–µ–∂–µ–Ω–Ω—è
exports.default = gulp.series(
  clean,
  gulp.parallel(html, styles, jsApp, jsFunctions, images),
  sitemap,
  watch
);
